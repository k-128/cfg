# Enable Powerlevel10k instant prompt.
# - Should stay close to the top of ~/.zshrc.
# - Initialization code that may require console input (password prompts, [y/n]
#   confirmations, etc.) must go above this block; everything else below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]];
then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi


# Zsh
# - https://zsh.sourceforge.io/Doc/Release/Options.html
# - https://zsh.sourceforge.io/Doc/Release/Options-Index.html
# - https://zsh-manual.netlify.app/the-z-shell-manual
# -----------------------------------------------------------------------------
setopt AUTO_CD              # Try to cd into non executable commands entered
#setopt CORRECT             # Ask to correct the spelling of commands
setopt INTERACTIVE_COMMENTS # Allow comments in interactive shell
setopt NO_NOMATCH           # Hide error msg on unmatched filename gen. pattern
setopt NOTIFY               # Report the status of background jobs immediately
setopt PROMPT_SUBST         # Param exp, cmd subst, arithmetic exp performed
setopt PROMPT_CR            # Print carriage return
setopt PROMPT_SP            # Try to preserve partial lines (no \n at the end)
export PROMPT_EOL_MARK=""   # Hide End Of Line sign: '%'


# Key bindings
# -----------------------------------------------------------------------------
bindkey -e                                      # Emacs key bindings
bindkey ' ' magic-space                         # On space: history expansion
bindkey '^U' backward-kill-line                 # Ctrl + U
bindkey '^[[3;5~' kill-word                     # Ctrl + Del
bindkey '^[[3~' delete-char                     # Del
bindkey '^[[1;5C' forward-word                  # Ctrl + right-arrow
bindkey '^[[1;5D' backward-word                 # Ctrl + left-arrow
bindkey '^[[5~' beginning-of-buffer-or-history  # Page up
bindkey '^[[6~' end-of-buffer-or-history        # Page down
bindkey '^[[H' beginning-of-line                # Home
bindkey "\033[1~" beginning-of-line             # Home
bindkey "\033[4~" end-of-line                   # End
bindkey '^[[F' end-of-line                      # End
bindkey '^[[Z' undo                             # Shift + Tab: undo last action


# Completion
# - https://zsh.sourceforge.io/Doc/Release/Completion-System.html
# -----------------------------------------------------------------------------
autoload -Uz compinit
compinit -d ~/.cache/zcompdump
zstyle ':completion:*:*:*:*:*' menu select
zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit Tab for more%s
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'
zstyle ':completion:*' rehash true
zstyle ':completion:*' select-prompt %SScrolling active: selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'


# History
# - https://zsh-manual.netlify.app/options#1624-history
# - https://zsh-manual.netlify.app/parameters#156-parameters-used-by-the-shell
# -----------------------------------------------------------------------------
HISTFILE=~/.zsh_history
HISTSIZE=1000
SAVEHIST=2000
setopt hist_expire_dups_first # on history trim: target the oldest dups first
setopt hist_ignore_dups       # ignore consecutive duplicate commands
setopt hist_ignore_space      # ignore commands starting with a space
setopt hist_verify            # Show command with history expansion before exec

TIMEFMT=$'\nreal\t%E\nuser\t%U\nsys\t%S\ncpu\t%P'


# Style
# -----------------------------------------------------------------------------
if [[ -x /usr/bin/dircolors ]]; then
  export LESS_TERMCAP_mb=$'\E[1;31m'      # begin blink
  export LESS_TERMCAP_md=$'\E[1;36m'      # begin bold
  export LESS_TERMCAP_me=$'\E[0m'         # reset bold/blink
  export LESS_TERMCAP_so=$'\E[01;33m'     # begin reverse video
  export LESS_TERMCAP_se=$'\E[0m'         # reset reverse video
  export LESS_TERMCAP_us=$'\E[1;32m'      # begin underline
  export LESS_TERMCAP_ue=$'\E[0m'         # reset underline

  export LS_COLORS="$LS_COLORS:ow=30;44:" # rm ls dir highlight (30;44), (1;34)
  zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
  zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
fi

set bell-style none

# _shape=3  # cursors: https://vt100.net/docs/vt510-rm/DECSCUSR
# printf $'\e[%d q' "${_shape}"


# Aliases
# -----------------------------------------------------------------------------
alias history="history 0" # force complete history
alias ls='ls --color=auto'
alias ll='ls -l'
alias l='ls -CF'
alias la='ls -lAv'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias diff='diff --color=auto'
alias ip='ip --color=auto'
alias rsyng='rsync --filter=":- .gitignore"'


# Packages
# -----------------------------------------------------------------------------
# History based auto-suggestion: github.com/zsh-users/zsh-autosuggestions
if [[ -f ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh ]]; then
  source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh
  ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=#999' # Suggestion color
fi

# Syntax-highlighting: github.com/zsh-users/zsh-syntax-highlighting
# - "must be sourced at the end of the .zshrc file"
if [[ -f ~/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]]; then
  source ~/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
  ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern)
  ZSH_HIGHLIGHT_STYLES[default]=none
  ZSH_HIGHLIGHT_STYLES[unknown-token]=fg=white,underline
  ZSH_HIGHLIGHT_STYLES[reserved-word]=fg=cyan,bold
  ZSH_HIGHLIGHT_STYLES[suffix-alias]=fg=green,underline
  ZSH_HIGHLIGHT_STYLES[global-alias]=fg=green,bold
  ZSH_HIGHLIGHT_STYLES[precommand]=fg=green,underline
  ZSH_HIGHLIGHT_STYLES[commandseparator]=fg=blue,bold
  ZSH_HIGHLIGHT_STYLES[autodirectory]=fg=green,underline
  ZSH_HIGHLIGHT_STYLES[path]=bold
  ZSH_HIGHLIGHT_STYLES[path_pathseparator]=
  ZSH_HIGHLIGHT_STYLES[path_prefix_pathseparator]=
  ZSH_HIGHLIGHT_STYLES[globbing]=fg=blue,bold
  ZSH_HIGHLIGHT_STYLES[history-expansion]=fg=blue,bold
  ZSH_HIGHLIGHT_STYLES[command-substitution]=none
  ZSH_HIGHLIGHT_STYLES[command-substitution-delimiter]=fg=magenta,bold
  ZSH_HIGHLIGHT_STYLES[process-substitution]=none
  ZSH_HIGHLIGHT_STYLES[process-substitution-delimiter]=fg=magenta,bold
  ZSH_HIGHLIGHT_STYLES[single-hyphen-option]=fg=green
  ZSH_HIGHLIGHT_STYLES[double-hyphen-option]=fg=green
  ZSH_HIGHLIGHT_STYLES[back-quoted-argument]=none
  ZSH_HIGHLIGHT_STYLES[back-quoted-argument-delimiter]=fg=blue,bold
  ZSH_HIGHLIGHT_STYLES[single-quoted-argument]=fg=yellow
  ZSH_HIGHLIGHT_STYLES[double-quoted-argument]=fg=yellow
  ZSH_HIGHLIGHT_STYLES[dollar-quoted-argument]=fg=yellow
  ZSH_HIGHLIGHT_STYLES[rc-quote]=fg=magenta
  ZSH_HIGHLIGHT_STYLES[dollar-double-quoted-argument]=fg=magenta,bold
  ZSH_HIGHLIGHT_STYLES[back-double-quoted-argument]=fg=magenta,bold
  ZSH_HIGHLIGHT_STYLES[back-dollar-quoted-argument]=fg=magenta,bold
  ZSH_HIGHLIGHT_STYLES[assign]=none
  ZSH_HIGHLIGHT_STYLES[redirection]=fg=blue,bold
  ZSH_HIGHLIGHT_STYLES[comment]=fg=black,bold
  ZSH_HIGHLIGHT_STYLES[named-fd]=none
  ZSH_HIGHLIGHT_STYLES[numeric-fd]=none
  ZSH_HIGHLIGHT_STYLES[arg0]=fg=cyan
  ZSH_HIGHLIGHT_STYLES[bracket-error]=fg=red,bold
  ZSH_HIGHLIGHT_STYLES[bracket-level-1]=fg=blue,bold
  ZSH_HIGHLIGHT_STYLES[bracket-level-2]=fg=green,bold
  ZSH_HIGHLIGHT_STYLES[bracket-level-3]=fg=magenta,bold
  ZSH_HIGHLIGHT_STYLES[bracket-level-4]=fg=yellow,bold
  ZSH_HIGHLIGHT_STYLES[bracket-level-5]=fg=cyan,bold
  ZSH_HIGHLIGHT_STYLES[cursor-matchingbracket]=standout
fi

# PowerLevel10k (github.com/romkatv/powerlevel10k)
# - To cfg: `p10k configure` or edit ~/.p10k.zsh
source ~/powerlevel10k/powerlevel10k.zsh-theme
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
POWERLEVEL9K_DISABLE_GITSTATUS=true       # Disable gitstatusd
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=('dir') # rm 'os_icon' 'context' 'vcs'
ZLE_RPROMPT_INDENT=0                      # rm right side space

# nvm (https://github.com/nvm-sh/nvm)
# - To install: github.com/nvm-sh/nvm/blob/master/install.sh
export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ]
  && printf %s "${HOME}/.nvm"
  || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # Load nvm
